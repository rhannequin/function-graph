// Generated by CoffeeScript 1.4.0
(function() {
  var AppView, Graph, GraphCollection, appView, clearFunction;

  Graph = Backbone.Model.extend({
    initialize: function() {},
    "default": {}
  });

  GraphCollection = Backbone.Collection.extend({
    model: Graph
  });

  AppView = Backbone.View.extend({
    el: 'body',
    events: {
      'submit form': 'addGraph'
    },
    cpt: 0,
    initialize: function() {
      var canvas, ctx, sample, x0, xmin, y0;
      canvas = document.getElementById('canvas');
      ctx = canvas.getContext('2d');
      this.axes = {
        x0: .5 + .5 * canvas.width,
        y0: .5 + .5 * canvas.height,
        scale: 20,
        doNegativeX: true
      };
      x0 = this.axes.x0;
      y0 = this.axes.y0;
      xmin = this.axes.doNegativeX ? 0 : x0;
      ctx.beginPath();
      ctx.strokeStyle = 'rgb(128,128,128)';
      ctx.moveTo(xmin, y0);
      ctx.lineTo(ctx.canvas.width, y0);
      ctx.moveTo(x0, 0);
      ctx.lineTo(x0, ctx.canvas.height);
      ctx.stroke();
      sample = function(x) {
        return Math.log(x);
      };
      return this.drawGraph(sample);
    },
    addGraph: function(e) {
      var form, func, val;
      e.preventDefault();
      form = $(e.target);
      val = form.find('input[type="text"]').val();
      func = function(x) {
        return eval(val);
      };
      return this.drawGraph(func);
    },
    drawGraph: function(func) {
      var context, cv, dx, i, iMax, iMin, scale, str, x0, xx, y0, yy;
      i = this.cpt++;
      str = '<canvas class="graph" id="canvas' + i + '" width="1000" height="500"></canvas>';
      this.$el.find('.canvas-box').append(str);
      cv = document.getElementById('canvas' + i);
      context = cv.getContext('2d');
      dx = 4;
      x0 = this.axes.x0;
      y0 = this.axes.y0;
      scale = this.axes.scale;
      iMax = Math.round((context.canvas.width - x0) / dx);
      iMin = this.axes.doNegativeX ? Math.round(-x0 / dx) : 0;
      context.beginPath();
      context.lineWidth = 1;
      context.strokeStyle = 'rgb(66,44,255)';
      i = iMin;
      while (true) {
        xx = dx * i;
        yy = scale * func(xx / scale);
        if (i === iMin) {
          context.moveTo(x0 + xx, y0 - yy);
        } else {
          context.lineTo(x0 + xx, y0 - yy);
        }
        i = i + 0.1;
        if (i > iMax) {
          break;
        }
      }
      return context.stroke();
    }
  }, clearFunction = function(number) {
    return $('#canvas' + number).remove();
  });

  appView = new AppView();

}).call(this);
